let PromisedPriorityQueue = function() {
  this.colaPromesas = [];
  this.resolveList = [];
  this.listaPrioritats = [];
  let contador = 0;

  this.decorate = (p, priority) => {
    this.colaPromesas.push(p);
    this.listaPrioritats.push(priority);

    const maxPriority = () => {
      let max_prio = Math.max(...this.listaPrioritats);
      let indexPriority = this.listaPrioritats.indexOf(max_prio);
      let q = this.colaPromesas[indexPriority];
      this.resolveList.push(q);
      this.colaPromesas.splice(indexPriority, 1);
      this.listaPrioritats.splice(indexPriority, 1);
      return q;
    };

    return new Promise((resolve, reject) => {
      contador++;

      const processQueue = () => {
        if (this.colaPromesas.length === 0) {
          this.resolveList.forEach((element) => {
            element.then(console.log);
          });
          return;
        }

        const q = maxPriority();
        q.then((value) => {
          console.log(value);
          processQueue();
        });
      };

      if (contador === this.colaPromesas.length) {
        processQueue();
      }
    });
  };
};
